{"ast":null,"code":"var _jsxFileName = \"/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/dashboard/OverviewPanel.js\";\nimport React from 'react';\nimport BarChart from '../charts/BarChart';\nimport FunnelChart from '../charts/FunnelChart';\nimport AgentChart from '../charts/AgentChart';\nimport './DashboardPanels.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OverviewPanel = ({\n  data,\n  formatCurrency\n}) => {\n  // Calculate metrics from real data\n  const calculateMetrics = () => {\n    // Sum up all regional pipeline values for the current quarter\n    const currentQuarter = getCurrentQuarter();\n    const totalPipelineValue = Object.values(data.regional_pipeline[currentQuarter]).reduce((sum, region) => sum + region.value, 0);\n\n    // Count total opportunities\n    const totalOpportunities = Object.values(data.regional_pipeline[currentQuarter]).reduce((sum, region) => sum + region.count, 0);\n\n    // Calculate average deal size\n    const avgDealSize = totalPipelineValue / (totalOpportunities || 1);\n\n    // Calculate win rate from stage breakdown\n    const wonDeals = Object.values(data.stage_region_breakdown).flatMap(region => region.stages).find(stage => stage.name === 'Closed Won');\n    const winRate = wonDeals ? (wonDeals.value / totalPipelineValue * 100).toFixed(1) : 0;\n    return {\n      totalPipelineValue,\n      totalOpportunities,\n      avgDealSize,\n      winRate\n    };\n  };\n  const getCurrentQuarter = () => {\n    const now = new Date();\n    const month = now.getMonth();\n    if (month >= 3 && month <= 5) return 'Q1';\n    if (month >= 6 && month <= 8) return 'Q2';\n    if (month >= 9 && month <= 11) return 'Q3';\n    return 'Q4';\n  };\n  const metrics = calculateMetrics();\n\n  // Transform region data for the chart - dynamically map from real data\n  const currentQuarter = getCurrentQuarter();\n  const regionData = Object.entries(data.regional_pipeline[currentQuarter]).map(([region, regionData]) => ({\n    region,\n    revenue: regionData.value,\n    targetRevenue: regionData.value * 1.2 // Using 20% above current as target, adjust as needed\n  }));\n\n  // Transform funnel data for the chart\n  const funnelData = Object.values(data.stage_region_breakdown).flatMap(region => region.stages).map(stage => ({\n    stage: stage.name,\n    count: stage.count,\n    value: stage.value\n  }));\n\n  // Transform agent data for the chart\n  const agentData = Object.entries(data.potential_closures).flatMap(([region, deals]) => deals.map(deal => ({\n    name: deal.name,\n    value: deal.value,\n    deals: 1\n  }))).reduce((acc, curr) => {\n    const existing = acc.find(item => item.name === curr.name);\n    if (existing) {\n      existing.value += curr.value;\n      existing.deals += curr.deals;\n    } else {\n      acc.push(curr);\n    }\n    return acc;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overview-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"panel-title\",\n      children: \"Sales Dashboard Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Total Pipeline Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatCurrency(metrics.totalPipelineValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Total Opportunities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: metrics.totalOpportunities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Average Deal Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatCurrency(metrics.avgDealSize)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Win Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: [metrics.winRate, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Revenue by Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n          data: regionData,\n          keys: ['revenue', 'targetRevenue'],\n          colors: ['#1a56db', '#cbd5e0']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Sales Funnel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FunnelChart, {\n          data: funnelData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card-title\",\n        children: \"Agent Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AgentChart, {\n        data: agentData,\n        formatCurrency: formatCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_c = OverviewPanel;\nexport default OverviewPanel;\nvar _c;\n$RefreshReg$(_c, \"OverviewPanel\");","map":{"version":3,"names":["React","BarChart","FunnelChart","AgentChart","jsxDEV","_jsxDEV","OverviewPanel","data","formatCurrency","calculateMetrics","currentQuarter","getCurrentQuarter","totalPipelineValue","Object","values","regional_pipeline","reduce","sum","region","value","totalOpportunities","count","avgDealSize","wonDeals","stage_region_breakdown","flatMap","stages","find","stage","name","winRate","toFixed","now","Date","month","getMonth","metrics","regionData","entries","map","revenue","targetRevenue","funnelData","agentData","potential_closures","deals","deal","acc","curr","existing","item","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","keys","colors","_c","$RefreshReg$"],"sources":["/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/dashboard/OverviewPanel.js"],"sourcesContent":["import React from 'react';\nimport BarChart from '../charts/BarChart';\nimport FunnelChart from '../charts/FunnelChart';\nimport AgentChart from '../charts/AgentChart';\nimport './DashboardPanels.css';\n\nconst OverviewPanel = ({ data, formatCurrency }) => {\n  // Calculate metrics from real data\n  const calculateMetrics = () => {\n    // Sum up all regional pipeline values for the current quarter\n    const currentQuarter = getCurrentQuarter();\n    const totalPipelineValue = Object.values(data.regional_pipeline[currentQuarter])\n      .reduce((sum, region) => sum + region.value, 0);\n    \n    // Count total opportunities\n    const totalOpportunities = Object.values(data.regional_pipeline[currentQuarter])\n      .reduce((sum, region) => sum + region.count, 0);\n    \n    // Calculate average deal size\n    const avgDealSize = totalPipelineValue / (totalOpportunities || 1);\n    \n    // Calculate win rate from stage breakdown\n    const wonDeals = Object.values(data.stage_region_breakdown)\n      .flatMap(region => region.stages)\n      .find(stage => stage.name === 'Closed Won');\n    const winRate = wonDeals ? (wonDeals.value / totalPipelineValue * 100).toFixed(1) : 0;\n\n    return {\n      totalPipelineValue,\n      totalOpportunities,\n      avgDealSize,\n      winRate\n    };\n  };\n\n  const getCurrentQuarter = () => {\n    const now = new Date();\n    const month = now.getMonth();\n    if (month >= 3 && month <= 5) return 'Q1';\n    if (month >= 6 && month <= 8) return 'Q2';\n    if (month >= 9 && month <= 11) return 'Q3';\n    return 'Q4';\n  };\n\n  const metrics = calculateMetrics();\n  \n  // Transform region data for the chart - dynamically map from real data\n  const currentQuarter = getCurrentQuarter();\n  const regionData = Object.entries(data.regional_pipeline[currentQuarter]).map(([region, regionData]) => ({\n    region,\n    revenue: regionData.value,\n    targetRevenue: regionData.value * 1.2 // Using 20% above current as target, adjust as needed\n  }));\n\n  // Transform funnel data for the chart\n  const funnelData = Object.values(data.stage_region_breakdown)\n    .flatMap(region => region.stages)\n    .map(stage => ({\n      stage: stage.name,\n      count: stage.count,\n      value: stage.value\n    }));\n\n  // Transform agent data for the chart\n  const agentData = Object.entries(data.potential_closures)\n    .flatMap(([region, deals]) => \n      deals.map(deal => ({\n        name: deal.name,\n        value: deal.value,\n        deals: 1\n      }))\n    )\n    .reduce((acc, curr) => {\n      const existing = acc.find(item => item.name === curr.name);\n      if (existing) {\n        existing.value += curr.value;\n        existing.deals += curr.deals;\n      } else {\n        acc.push(curr);\n      }\n      return acc;\n    }, []);\n  \n  return (\n    <div className=\"overview-panel\">\n      <h2 className=\"panel-title\">Sales Dashboard Overview</h2>\n      \n      {/* Key Metrics Row */}\n      <div className=\"metrics-grid\">\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Total Pipeline Value</div>\n          <div className=\"metric-value\">{formatCurrency(metrics.totalPipelineValue)}</div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Total Opportunities</div>\n          <div className=\"metric-value\">{metrics.totalOpportunities}</div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Average Deal Size</div>\n          <div className=\"metric-value\">{formatCurrency(metrics.avgDealSize)}</div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Win Rate</div>\n          <div className=\"metric-value\">{metrics.winRate}%</div>\n        </div>\n      </div>\n      \n      {/* Charts Section */}\n      <div className=\"charts-grid\">\n        <div className=\"card\">\n          <h3 className=\"card-title\">Revenue by Region</h3>\n          <BarChart \n            data={regionData} \n            keys={['revenue', 'targetRevenue']} \n            colors={['#1a56db', '#cbd5e0']} \n          />\n        </div>\n        <div className=\"card\">\n          <h3 className=\"card-title\">Sales Funnel</h3>\n          <FunnelChart data={funnelData} />\n        </div>\n      </div>\n      \n      {/* Agent Performance Section */}\n      <div className=\"card\">\n        <h3 className=\"card-title\">Agent Performance</h3>\n        <AgentChart data={agentData} formatCurrency={formatCurrency} />\n      </div>\n    </div>\n  );\n};\n\nexport default OverviewPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}