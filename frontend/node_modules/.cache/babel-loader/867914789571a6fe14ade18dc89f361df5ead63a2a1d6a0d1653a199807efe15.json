{"ast":null,"code":"var _jsxFileName = \"/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/dashboard/OverviewPanel.js\";\nimport React from 'react';\nimport BarChart from '../charts/BarChart';\nimport FunnelChart from '../charts/FunnelChart';\nimport AgentChart from '../charts/AgentChart';\nimport './DashboardPanels.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OverviewPanel = ({\n  data,\n  formatCurrency\n}) => {\n  // Calculate metrics from real data\n  const calculateMetrics = () => {\n    var _data$opportunities$b;\n    // Sum up all regional pipeline values for the current quarter\n    const currentQuarter = getCurrentQuarter();\n    const totalPipelineValue = Object.values(data.opportunities.by_region).reduce((sum, region) => sum + region.Amount, 0);\n\n    // Count total opportunities\n    const totalOpportunities = Object.values(data.opportunities.by_region).reduce((sum, region) => sum + region['Record Id'], 0);\n\n    // Calculate average deal size\n    const avgDealSize = totalPipelineValue / (totalOpportunities || 1);\n\n    // Calculate win rate from stage breakdown\n    const closedWonAmount = ((_data$opportunities$b = data.opportunities.by_stage['Closed Won']) === null || _data$opportunities$b === void 0 ? void 0 : _data$opportunities$b.Amount) || 0;\n    const winRate = (closedWonAmount / totalPipelineValue * 100).toFixed(1);\n    return {\n      totalPipelineValue,\n      totalOpportunities,\n      avgDealSize,\n      winRate\n    };\n  };\n  const getCurrentQuarter = () => {\n    const now = new Date();\n    const month = now.getMonth();\n    if (month >= 3 && month <= 5) return 'Q1';\n    if (month >= 6 && month <= 8) return 'Q2';\n    if (month >= 9 && month <= 11) return 'Q3';\n    return 'Q4';\n  };\n  const metrics = calculateMetrics();\n\n  // Transform region data for the chart - dynamically map from real data\n  const regionData = Object.entries(data.opportunities.by_region).map(([region, regionData]) => ({\n    region,\n    revenue: regionData.Amount,\n    targetRevenue: regionData.Amount * 1.2 // Using 20% above current as target, adjust as needed\n  }));\n\n  // Transform funnel data for the chart\n  const funnelData = Object.entries(data.opportunities.by_stage).map(([stage, stageData]) => ({\n    stage,\n    count: stageData['Record Id'],\n    value: stageData.Amount\n  })).filter(stage => stage.value > 0); // Only include stages with value\n\n  // Transform agent data for the chart\n  const agentData = Object.entries(data.opportunities.by_owner).map(([name, ownerData]) => ({\n    name,\n    value: ownerData.Amount,\n    deals: ownerData['Record Id']\n  })).filter(agent => agent.value > 0); // Only include agents with value\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overview-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"panel-title\",\n      children: \"Sales Dashboard Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Total Pipeline Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatCurrency(metrics.totalPipelineValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Total Opportunities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: metrics.totalOpportunities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Average Deal Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatCurrency(metrics.avgDealSize)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Win Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: [metrics.winRate, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Revenue by Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n          data: regionData,\n          keys: ['revenue', 'targetRevenue'],\n          colors: ['#1a56db', '#cbd5e0']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Sales Funnel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FunnelChart, {\n          data: funnelData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card-title\",\n        children: \"Agent Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AgentChart, {\n        data: agentData,\n        formatCurrency: formatCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_c = OverviewPanel;\nexport default OverviewPanel;\nvar _c;\n$RefreshReg$(_c, \"OverviewPanel\");","map":{"version":3,"names":["React","BarChart","FunnelChart","AgentChart","jsxDEV","_jsxDEV","OverviewPanel","data","formatCurrency","calculateMetrics","_data$opportunities$b","currentQuarter","getCurrentQuarter","totalPipelineValue","Object","values","opportunities","by_region","reduce","sum","region","Amount","totalOpportunities","avgDealSize","closedWonAmount","by_stage","winRate","toFixed","now","Date","month","getMonth","metrics","regionData","entries","map","revenue","targetRevenue","funnelData","stage","stageData","count","value","filter","agentData","by_owner","name","ownerData","deals","agent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","keys","colors","_c","$RefreshReg$"],"sources":["/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/dashboard/OverviewPanel.js"],"sourcesContent":["import React from 'react';\nimport BarChart from '../charts/BarChart';\nimport FunnelChart from '../charts/FunnelChart';\nimport AgentChart from '../charts/AgentChart';\nimport './DashboardPanels.css';\n\nconst OverviewPanel = ({ data, formatCurrency }) => {\n  // Calculate metrics from real data\n  const calculateMetrics = () => {\n    // Sum up all regional pipeline values for the current quarter\n    const currentQuarter = getCurrentQuarter();\n    const totalPipelineValue = Object.values(data.opportunities.by_region)\n      .reduce((sum, region) => sum + region.Amount, 0);\n    \n    // Count total opportunities\n    const totalOpportunities = Object.values(data.opportunities.by_region)\n      .reduce((sum, region) => sum + region['Record Id'], 0);\n    \n    // Calculate average deal size\n    const avgDealSize = totalPipelineValue / (totalOpportunities || 1);\n    \n    // Calculate win rate from stage breakdown\n    const closedWonAmount = data.opportunities.by_stage['Closed Won']?.Amount || 0;\n    const winRate = (closedWonAmount / totalPipelineValue * 100).toFixed(1);\n\n    return {\n      totalPipelineValue,\n      totalOpportunities,\n      avgDealSize,\n      winRate\n    };\n  };\n\n  const getCurrentQuarter = () => {\n    const now = new Date();\n    const month = now.getMonth();\n    if (month >= 3 && month <= 5) return 'Q1';\n    if (month >= 6 && month <= 8) return 'Q2';\n    if (month >= 9 && month <= 11) return 'Q3';\n    return 'Q4';\n  };\n\n  const metrics = calculateMetrics();\n  \n  // Transform region data for the chart - dynamically map from real data\n  const regionData = Object.entries(data.opportunities.by_region).map(([region, regionData]) => ({\n    region,\n    revenue: regionData.Amount,\n    targetRevenue: regionData.Amount * 1.2 // Using 20% above current as target, adjust as needed\n  }));\n\n  // Transform funnel data for the chart\n  const funnelData = Object.entries(data.opportunities.by_stage)\n    .map(([stage, stageData]) => ({\n      stage,\n      count: stageData['Record Id'],\n      value: stageData.Amount\n    }))\n    .filter(stage => stage.value > 0); // Only include stages with value\n\n  // Transform agent data for the chart\n  const agentData = Object.entries(data.opportunities.by_owner)\n    .map(([name, ownerData]) => ({\n      name,\n      value: ownerData.Amount,\n      deals: ownerData['Record Id']\n    }))\n    .filter(agent => agent.value > 0); // Only include agents with value\n  \n  return (\n    <div className=\"overview-panel\">\n      <h2 className=\"panel-title\">Sales Dashboard Overview</h2>\n      \n      {/* Key Metrics Row */}\n      <div className=\"metrics-grid\">\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Total Pipeline Value</div>\n          <div className=\"metric-value\">{formatCurrency(metrics.totalPipelineValue)}</div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Total Opportunities</div>\n          <div className=\"metric-value\">{metrics.totalOpportunities}</div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Average Deal Size</div>\n          <div className=\"metric-value\">{formatCurrency(metrics.avgDealSize)}</div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Win Rate</div>\n          <div className=\"metric-value\">{metrics.winRate}%</div>\n        </div>\n      </div>\n      \n      {/* Charts Section */}\n      <div className=\"charts-grid\">\n        <div className=\"card\">\n          <h3 className=\"card-title\">Revenue by Region</h3>\n          <BarChart \n            data={regionData} \n            keys={['revenue', 'targetRevenue']} \n            colors={['#1a56db', '#cbd5e0']} \n          />\n        </div>\n        <div className=\"card\">\n          <h3 className=\"card-title\">Sales Funnel</h3>\n          <FunnelChart data={funnelData} />\n        </div>\n      </div>\n      \n      {/* Agent Performance Section */}\n      <div className=\"card\">\n        <h3 className=\"card-title\">Agent Performance</h3>\n        <AgentChart data={agentData} formatCurrency={formatCurrency} />\n      </div>\n    </div>\n  );\n};\n\nexport default OverviewPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}