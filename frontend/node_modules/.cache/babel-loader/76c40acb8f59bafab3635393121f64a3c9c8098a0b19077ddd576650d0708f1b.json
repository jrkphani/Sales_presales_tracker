{"ast":null,"code":"var _jsxFileName = \"/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/dashboard/OverviewPanel.js\";\nimport React from 'react';\nimport BarChart from '../charts/BarChart';\nimport FunnelChart from '../charts/FunnelChart';\nimport AgentChart from '../charts/AgentChart';\nimport './DashboardPanels.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OverviewPanel = ({\n  data,\n  formatCurrency\n}) => {\n  // Calculate metrics from real data\n  const calculateMetrics = () => {\n    // Sum up all regional pipeline values for the current quarter\n    const currentQuarter = getCurrentQuarter();\n    const totalPipelineValue = Object.values(data.regional_pipeline[currentQuarter]).reduce((sum, region) => sum + region.value, 0);\n\n    // Count total opportunities\n    const totalOpportunities = Object.values(data.regional_pipeline[currentQuarter]).reduce((sum, region) => sum + region.count, 0);\n\n    // Calculate average deal size\n    const avgDealSize = totalPipelineValue / (totalOpportunities || 1);\n\n    // Calculate win rate from stage breakdown\n    const totalWonValue = Object.values(data.stage_region_breakdown).reduce((sum, region) => {\n      const wonStage = region.stages.find(stage => stage.name === 'Closed Won');\n      return sum + ((wonStage === null || wonStage === void 0 ? void 0 : wonStage.value) || 0);\n    }, 0);\n    const winRate = (totalWonValue / totalPipelineValue * 100).toFixed(1);\n    return {\n      totalPipelineValue,\n      totalOpportunities,\n      avgDealSize,\n      winRate\n    };\n  };\n  const getCurrentQuarter = () => {\n    const now = new Date();\n    const month = now.getMonth();\n    if (month >= 3 && month <= 5) return 'Q1';\n    if (month >= 6 && month <= 8) return 'Q2';\n    if (month >= 9 && month <= 11) return 'Q3';\n    return 'Q4';\n  };\n  const metrics = calculateMetrics();\n\n  // Transform region data for the chart - dynamically map from real data\n  const currentQuarter = getCurrentQuarter();\n  const regionData = Object.entries(data.regional_pipeline[currentQuarter]).map(([region, regionData]) => ({\n    region,\n    revenue: regionData.value,\n    targetRevenue: regionData.value * 1.2 // Using 20% above current as target, adjust as needed\n  }));\n\n  // Transform funnel data for the chart\n  const funnelData = Object.values(data.stage_region_breakdown).flatMap(region => region.stages).reduce((acc, stage) => {\n    const existingStage = acc.find(s => s.stage === stage.name);\n    if (existingStage) {\n      existingStage.value += stage.value;\n      existingStage.count += stage.count;\n    } else {\n      acc.push({\n        stage: stage.name,\n        value: stage.value,\n        count: stage.count\n      });\n    }\n    return acc;\n  }, []).sort((a, b) => b.value - a.value); // Sort by value in descending order\n\n  // Transform agent data for the chart\n  const agentData = Object.values(data.potential_closures).flatMap(deals => deals).reduce((acc, deal) => {\n    const existing = acc.find(item => item.name === deal.name);\n    if (existing) {\n      existing.value += deal.value;\n      existing.deals++;\n    } else {\n      acc.push({\n        name: deal.name,\n        value: deal.value,\n        deals: 1\n      });\n    }\n    return acc;\n  }, []).sort((a, b) => b.value - a.value); // Sort by value in descending order\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overview-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"panel-title\",\n      children: \"Sales Dashboard Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Total Pipeline Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatCurrency(metrics.totalPipelineValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Total Opportunities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: metrics.totalOpportunities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Average Deal Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatCurrency(metrics.avgDealSize)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-title\",\n          children: \"Win Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: [metrics.winRate, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Revenue by Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n          data: regionData,\n          keys: ['revenue', 'targetRevenue'],\n          colors: ['#1a56db', '#cbd5e0'],\n          formatCurrency: formatCurrency,\n          xAxisKey: \"region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Sales Funnel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FunnelChart, {\n          data: funnelData,\n          formatCurrency: formatCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_c = OverviewPanel;\nexport default OverviewPanel;\nvar _c;\n$RefreshReg$(_c, \"OverviewPanel\");","map":{"version":3,"names":["React","BarChart","FunnelChart","AgentChart","jsxDEV","_jsxDEV","OverviewPanel","data","formatCurrency","calculateMetrics","currentQuarter","getCurrentQuarter","totalPipelineValue","Object","values","regional_pipeline","reduce","sum","region","value","totalOpportunities","count","avgDealSize","totalWonValue","stage_region_breakdown","wonStage","stages","find","stage","name","winRate","toFixed","now","Date","month","getMonth","metrics","regionData","entries","map","revenue","targetRevenue","funnelData","flatMap","acc","existingStage","s","push","sort","a","b","agentData","potential_closures","deals","deal","existing","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","keys","colors","xAxisKey","_c","$RefreshReg$"],"sources":["/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/dashboard/OverviewPanel.js"],"sourcesContent":["import React from 'react';\nimport BarChart from '../charts/BarChart';\nimport FunnelChart from '../charts/FunnelChart';\nimport AgentChart from '../charts/AgentChart';\nimport './DashboardPanels.css';\n\nconst OverviewPanel = ({ data, formatCurrency }) => {\n  // Calculate metrics from real data\n  const calculateMetrics = () => {\n    // Sum up all regional pipeline values for the current quarter\n    const currentQuarter = getCurrentQuarter();\n    const totalPipelineValue = Object.values(data.regional_pipeline[currentQuarter])\n      .reduce((sum, region) => sum + region.value, 0);\n    \n    // Count total opportunities\n    const totalOpportunities = Object.values(data.regional_pipeline[currentQuarter])\n      .reduce((sum, region) => sum + region.count, 0);\n    \n    // Calculate average deal size\n    const avgDealSize = totalPipelineValue / (totalOpportunities || 1);\n    \n    // Calculate win rate from stage breakdown\n    const totalWonValue = Object.values(data.stage_region_breakdown)\n      .reduce((sum, region) => {\n        const wonStage = region.stages.find(stage => stage.name === 'Closed Won');\n        return sum + (wonStage?.value || 0);\n      }, 0);\n    const winRate = (totalWonValue / totalPipelineValue * 100).toFixed(1);\n\n    return {\n      totalPipelineValue,\n      totalOpportunities,\n      avgDealSize,\n      winRate\n    };\n  };\n\n  const getCurrentQuarter = () => {\n    const now = new Date();\n    const month = now.getMonth();\n    if (month >= 3 && month <= 5) return 'Q1';\n    if (month >= 6 && month <= 8) return 'Q2';\n    if (month >= 9 && month <= 11) return 'Q3';\n    return 'Q4';\n  };\n\n  const metrics = calculateMetrics();\n  \n  // Transform region data for the chart - dynamically map from real data\n  const currentQuarter = getCurrentQuarter();\n  const regionData = Object.entries(data.regional_pipeline[currentQuarter]).map(([region, regionData]) => ({\n    region,\n    revenue: regionData.value,\n    targetRevenue: regionData.value * 1.2 // Using 20% above current as target, adjust as needed\n  }));\n\n  // Transform funnel data for the chart\n  const funnelData = Object.values(data.stage_region_breakdown)\n    .flatMap(region => region.stages)\n    .reduce((acc, stage) => {\n      const existingStage = acc.find(s => s.stage === stage.name);\n      if (existingStage) {\n        existingStage.value += stage.value;\n        existingStage.count += stage.count;\n      } else {\n        acc.push({\n          stage: stage.name,\n          value: stage.value,\n          count: stage.count\n        });\n      }\n      return acc;\n    }, [])\n    .sort((a, b) => b.value - a.value); // Sort by value in descending order\n\n  // Transform agent data for the chart\n  const agentData = Object.values(data.potential_closures)\n    .flatMap(deals => deals)\n    .reduce((acc, deal) => {\n      const existing = acc.find(item => item.name === deal.name);\n      if (existing) {\n        existing.value += deal.value;\n        existing.deals++;\n      } else {\n        acc.push({\n          name: deal.name,\n          value: deal.value,\n          deals: 1\n        });\n      }\n      return acc;\n    }, [])\n    .sort((a, b) => b.value - a.value); // Sort by value in descending order\n  \n  return (\n    <div className=\"overview-panel\">\n      <h2 className=\"panel-title\">Sales Dashboard Overview</h2>\n      \n      {/* Key Metrics Row */}\n      <div className=\"metrics-grid\">\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Total Pipeline Value</div>\n          <div className=\"metric-value\">{formatCurrency(metrics.totalPipelineValue)}</div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Total Opportunities</div>\n          <div className=\"metric-value\">{metrics.totalOpportunities}</div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Average Deal Size</div>\n          <div className=\"metric-value\">{formatCurrency(metrics.avgDealSize)}</div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Win Rate</div>\n          <div className=\"metric-value\">{metrics.winRate}%</div>\n        </div>\n      </div>\n      \n      {/* Charts Section */}\n      <div className=\"charts-grid\">\n        <div className=\"card\">\n          <h3 className=\"card-title\">Revenue by Region</h3>\n          <BarChart \n            data={regionData} \n            keys={['revenue', 'targetRevenue']} \n            colors={['#1a56db', '#cbd5e0']} \n            formatCurrency={formatCurrency}\n            xAxisKey=\"region\"\n          />\n        </div>\n        <div className=\"card\">\n          <h3 className=\"card-title\">Sales Funnel</h3>\n          <FunnelChart data={funnelData} formatCurrency={formatCurrency} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OverviewPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}