{"ast":null,"code":"var _jsxFileName = \"/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/charts/BarChart.js\";\nimport React from 'react';\nimport { ResponsiveContainer, BarChart as RechartsBarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n// CustomTooltip component that receives formatCurrency directly as a prop\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label,\n  formatCurrency\n}) => {\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: payload.map((entry, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltip-value\",\n        style: {\n          color: entry.color\n        },\n        children: [entry.name, \": \", formatCurrency(entry.value)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst BarChart = ({\n  data,\n  keys,\n  colors,\n  onClick,\n  formatCurrency,\n  xAxisKey = 'quarter'\n}) => {\n  // Debug: log the data and keys to check for x-axis issues\n  console.log(\"BarChart data:\", data);\n  console.log(\"BarChart keys:\", keys);\n  // No need to add formatCurrency to each data point since we pass it directly to CustomTooltip\n  const enhancedData = data;\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 350,\n    children: /*#__PURE__*/_jsxDEV(RechartsBarChart, {\n      data: enhancedData,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: xAxisKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: props => /*#__PURE__*/_jsxDEV(CustomTooltip, {\n          ...props,\n          formatCurrency: formatCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), keys.map((key, index) => /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: key,\n        name: key.split('_')[0],\n        fill: colors[index],\n        radius: [4, 4, 0, 0]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c2 = BarChart;\nexport default BarChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"BarChart\");","map":{"version":3,"names":["React","ResponsiveContainer","BarChart","RechartsBarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","formatCurrency","length","className","children","map","entry","index","style","color","name","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","data","keys","colors","onClick","xAxisKey","console","log","enhancedData","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","content","props","key","split","fill","radius","_c2","$RefreshReg$"],"sources":["/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/charts/BarChart.js"],"sourcesContent":["import React from 'react';\nimport {\n  ResponsiveContainer,\n  BarChart as RechartsBarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from 'recharts';\n\n// CustomTooltip component that receives formatCurrency directly as a prop\nconst CustomTooltip = ({ active, payload, label, formatCurrency }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\">\n        {payload.map((entry, index) => (\n          <p key={index} className=\"tooltip-value\" style={{ color: entry.color }}>\n            {entry.name}: {formatCurrency(entry.value)}\n          </p>\n        ))}\n      </div>\n    );\n  }\n  return null;\n};\n\nconst BarChart = ({ data, keys, colors, onClick, formatCurrency, xAxisKey = 'quarter' }) => {\n  // Debug: log the data and keys to check for x-axis issues\n  console.log(\"BarChart data:\", data);\n  console.log(\"BarChart keys:\", keys);\n  // No need to add formatCurrency to each data point since we pass it directly to CustomTooltip\n  const enhancedData = data;\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={350}>\n      <RechartsBarChart\n        data={enhancedData}\n        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n        onClick={onClick}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey={xAxisKey} />\n        <YAxis />\n        <Tooltip content={props => <CustomTooltip {...props} formatCurrency={formatCurrency} />} />\n        <Legend />\n        {keys.map((key, index) => (\n          <Bar\n            key={key}\n            dataKey={key}\n            name={key.split('_')[0]}\n            fill={colors[index]}\n            radius={[4, 4, 0, 0]}\n          />\n        ))}\n      </RechartsBarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default BarChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}