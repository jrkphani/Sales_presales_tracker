{"ast":null,"code":"var _jsxFileName = \"/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/charts/FunnelChart.js\";\nimport React from 'react';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  formatCurrency\n}) => {\n  if (active && payload && payload.length) {\n    const data = payload[0].payload;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"label\",\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"value\",\n        children: [\"Value: \", formatCurrency(data.value)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: [\"Deals: \", data.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst FunnelChart = ({\n  data,\n  formatCurrency\n}) => {\n  // Debug: log the data to check for name fields\n  console.log(\"FunnelChart data:\", data);\n  // Sort data to ensure it's in the correct funnel order\n  const sortedData = [...data].sort((a, b) => b.value - a.value);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: 1200,\n    height: 350,\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: sortedData,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        type: \"category\",\n        dataKey: \"stage\",\n        angle: 0,\n        textAnchor: \"middle\",\n        interval: 0,\n        height: 40,\n        stroke: \"#1a202c\",\n        tick: {\n          fontSize: 10,\n          fill: \"#1a202c\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: /*#__PURE__*/_jsxDEV(CustomTooltip, {\n          formatCurrency: formatCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"value\",\n        name: \"Deal Value\",\n        fill: \"#1a56db\",\n        radius: [4, 4, 0, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"count\",\n        name: \"Deal Count\",\n        fill: \"#7e3af2\",\n        radius: [4, 4, 0, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c2 = FunnelChart;\nexport default FunnelChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"FunnelChart\");","map":{"version":3,"names":["React","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","CustomTooltip","active","payload","formatCurrency","length","data","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","value","count","_c","FunnelChart","console","log","sortedData","sort","a","b","width","height","margin","top","right","left","bottom","strokeDasharray","type","dataKey","angle","textAnchor","interval","stroke","tick","fontSize","fill","content","radius","_c2","$RefreshReg$"],"sources":["/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/charts/FunnelChart.js"],"sourcesContent":["import React from 'react';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from 'recharts';\n\nconst CustomTooltip = ({ active, payload, formatCurrency }) => {\n  if (active && payload && payload.length) {\n    const data = payload[0].payload;\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\">{data.name}</p>\n        <p className=\"value\">Value: {formatCurrency(data.value)}</p>\n        <p className=\"count\">Deals: {data.count}</p>\n      </div>\n    );\n  }\n  return null;\n};\n\nconst FunnelChart = ({ data, formatCurrency }) => {\n  // Debug: log the data to check for name fields\n  console.log(\"FunnelChart data:\", data);\n  // Sort data to ensure it's in the correct funnel order\n  const sortedData = [...data].sort((a, b) => b.value - a.value);\n  \n  return (\n    <ResponsiveContainer width={1200} height={350}>\n      <BarChart\n        data={sortedData}\n        margin={{ top: 20, right: 30, left: 20, bottom: 40 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        {/* X axis: force horizontal labels, small font */}\n        <XAxis \n          type=\"category\" \n          dataKey=\"stage\" \n          angle={0} \n          textAnchor=\"middle\" \n          interval={0} \n          height={40} \n          stroke=\"#1a202c\"\n          tick={{ fontSize: 10, fill: \"#1a202c\" }}\n        />\n        <YAxis type=\"number\" />\n        <Tooltip content={<CustomTooltip formatCurrency={formatCurrency} />} />\n        <Legend />\n        <Bar \n          dataKey=\"value\" \n          name=\"Deal Value\" \n          fill=\"#1a56db\" \n          radius={[4, 4, 0, 0]}\n        />\n        <Bar \n          dataKey=\"count\" \n          name=\"Deal Count\" \n          fill=\"#7e3af2\" \n          radius={[4, 4, 0, 0]}\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default FunnelChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}