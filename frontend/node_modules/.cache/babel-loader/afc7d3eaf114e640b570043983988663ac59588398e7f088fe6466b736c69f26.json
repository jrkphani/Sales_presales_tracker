{"ast":null,"code":"var _jsxFileName = \"/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/Dashboard.css';\nimport { getDashboardData } from '../services/data/sales-data-service';\nimport RegionRevenue from './dashboard/RegionRevenue';\nimport SalesFunnel from './dashboard/SalesFunnel';\nimport OverviewPanel from './dashboard/OverviewPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [dashboardData, setDashboardData] = useState({\n    // Initial state structure (will be replaced with real data)\n    regional_pipeline: {\n      Q1: {\n        APAC: {\n          value: 0,\n          count: 0\n        },\n        EMEA: {\n          value: 0,\n          count: 0\n        },\n        Americas: {\n          value: 0,\n          count: 0\n        }\n      },\n      Q2: {\n        APAC: {\n          value: 0,\n          count: 0\n        },\n        EMEA: {\n          value: 0,\n          count: 0\n        },\n        Americas: {\n          value: 0,\n          count: 0\n        }\n      },\n      Q3: {\n        APAC: {\n          value: 0,\n          count: 0\n        },\n        EMEA: {\n          value: 0,\n          count: 0\n        },\n        Americas: {\n          value: 0,\n          count: 0\n        }\n      },\n      Q4: {\n        APAC: {\n          value: 0,\n          count: 0\n        },\n        EMEA: {\n          value: 0,\n          count: 0\n        },\n        Americas: {\n          value: 0,\n          count: 0\n        }\n      }\n    },\n    stage_region_breakdown: {\n      APAC: {\n        stages: []\n      },\n      EMEA: {\n        stages: []\n      },\n      Americas: {\n        stages: []\n      }\n    },\n    en_nn_split: {\n      APAC: {\n        EN: {\n          value: 0,\n          count: 0\n        },\n        NN: {\n          value: 0,\n          count: 0\n        }\n      },\n      EMEA: {\n        EN: {\n          value: 0,\n          count: 0\n        },\n        NN: {\n          value: 0,\n          count: 0\n        }\n      },\n      Americas: {\n        EN: {\n          value: 0,\n          count: 0\n        },\n        NN: {\n          value: 0,\n          count: 0\n        }\n      }\n    },\n    revenue_projection: {\n      APAC: {\n        quota: 0,\n        achieved: 0,\n        projected_80: 0,\n        projected_all: 0\n      },\n      EMEA: {\n        quota: 0,\n        achieved: 0,\n        projected_80: 0,\n        projected_all: 0\n      },\n      Americas: {\n        quota: 0,\n        achieved: 0,\n        projected_80: 0,\n        projected_all: 0\n      }\n    },\n    potential_closures: {\n      APAC: [],\n      EMEA: [],\n      Americas: []\n    },\n    opportunity_types: {\n      APAC: {\n        POC: {\n          value: 0,\n          count: 0\n        },\n        MAP: {\n          value: 0,\n          count: 0\n        },\n        GenAI: {\n          value: 0,\n          count: 0\n        }\n      },\n      EMEA: {\n        POC: {\n          value: 0,\n          count: 0\n        },\n        MAP: {\n          value: 0,\n          count: 0\n        },\n        GenAI: {\n          value: 0,\n          count: 0\n        }\n      },\n      Americas: {\n        POC: {\n          value: 0,\n          count: 0\n        },\n        MAP: {\n          value: 0,\n          count: 0\n        },\n        GenAI: {\n          value: 0,\n          count: 0\n        }\n      }\n    },\n    stage_movement: {\n      APAC: [],\n      EMEA: [],\n      Americas: []\n    },\n    financial_year: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-SG', {\n      style: 'currency',\n      currency: 'SGD',\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n  const formatDateRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    return `${start.toLocaleDateString('en-SG')} - ${end.toLocaleDateString('en-SG')}`;\n  };\n\n  // Get financial year quarter dates\n  const getFinancialYearQuarterDates = () => {\n    const now = new Date();\n    const currentMonth = now.getMonth(); // 0-11\n    const currentYear = now.getFullYear();\n\n    // Determine financial year\n    const financialYearStart = currentMonth < 3 ? currentYear - 1 : currentYear;\n    const financialYearEnd = financialYearStart + 1;\n\n    // Q1: Apr-Jun, Q2: Jul-Sep, Q3: Oct-Dec, Q4: Jan-Mar\n    return {\n      Q1: {\n        start: new Date(financialYearStart, 3, 1),\n        // April 1\n        end: new Date(financialYearStart, 5, 30) // June 30\n      },\n      Q2: {\n        start: new Date(financialYearStart, 6, 1),\n        // July 1\n        end: new Date(financialYearStart, 8, 30) // September 30\n      },\n      Q3: {\n        start: new Date(financialYearStart, 9, 1),\n        // October 1\n        end: new Date(financialYearStart, 11, 31) // December 31\n      },\n      Q4: {\n        start: new Date(financialYearEnd, 0, 1),\n        // January 1\n        end: new Date(financialYearEnd, 2, 31) // March 31\n      }\n    };\n  };\n\n  // Fetch data from Zoho CRM API\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const data = await getDashboardData();\n        setDashboardData(data);\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching dashboard data:', err);\n        setError('Failed to load dashboard data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Loading dashboard data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this);\n  }\n  const quarterDates = getFinancialYearQuarterDates();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sales Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financial-year\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Financial Year: \", dashboardData.financial_year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-ranges\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Q1: \", formatDateRange(quarterDates.Q1.start, quarterDates.Q1.end)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Q2: \", formatDateRange(quarterDates.Q2.start, quarterDates.Q2.end)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Q3: \", formatDateRange(quarterDates.Q3.start, quarterDates.Q3.end)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Q4: \", formatDateRange(quarterDates.Q4.start, quarterDates.Q4.end)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(OverviewPanel, {\n        data: dashboardData,\n        formatCurrency: formatCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RegionRevenue, {\n        data: dashboardData.regional_pipeline,\n        formatCurrency: formatCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SalesFunnel, {\n        data: dashboardData.stage_region_breakdown,\n        formatCurrency: formatCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"AHYBItua9pwDTayvD59kqB0sOU4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","getDashboardData","RegionRevenue","SalesFunnel","OverviewPanel","jsxDEV","_jsxDEV","Dashboard","_s","dashboardData","setDashboardData","regional_pipeline","Q1","APAC","value","count","EMEA","Americas","Q2","Q3","Q4","stage_region_breakdown","stages","en_nn_split","EN","NN","revenue_projection","quota","achieved","projected_80","projected_all","potential_closures","opportunity_types","POC","MAP","GenAI","stage_movement","financial_year","loading","setLoading","error","setError","formatCurrency","Intl","NumberFormat","style","currency","maximumFractionDigits","format","formatDateRange","startDate","endDate","start","Date","end","toLocaleDateString","getFinancialYearQuarterDates","now","currentMonth","getMonth","currentYear","getFullYear","financialYearStart","financialYearEnd","fetchData","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","quarterDates","_c","$RefreshReg$"],"sources":["/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/Dashboard.css';\nimport { getDashboardData } from '../services/data/sales-data-service';\nimport RegionRevenue from './dashboard/RegionRevenue';\nimport SalesFunnel from './dashboard/SalesFunnel';\nimport OverviewPanel from './dashboard/OverviewPanel';\n\nconst Dashboard = () => {\n    const [dashboardData, setDashboardData] = useState({\n        // Initial state structure (will be replaced with real data)\n        regional_pipeline: {\n            Q1: { APAC: { value: 0, count: 0 }, EMEA: { value: 0, count: 0 }, Americas: { value: 0, count: 0 } },\n            Q2: { APAC: { value: 0, count: 0 }, EMEA: { value: 0, count: 0 }, Americas: { value: 0, count: 0 } },\n            Q3: { APAC: { value: 0, count: 0 }, EMEA: { value: 0, count: 0 }, Americas: { value: 0, count: 0 } },\n            Q4: { APAC: { value: 0, count: 0 }, EMEA: { value: 0, count: 0 }, Americas: { value: 0, count: 0 } }\n        },\n        stage_region_breakdown: {\n            APAC: { stages: [] },\n            EMEA: { stages: [] },\n            Americas: { stages: [] }\n        },\n        en_nn_split: {\n            APAC: { EN: { value: 0, count: 0 }, NN: { value: 0, count: 0 } },\n            EMEA: { EN: { value: 0, count: 0 }, NN: { value: 0, count: 0 } },\n            Americas: { EN: { value: 0, count: 0 }, NN: { value: 0, count: 0 } }\n        },\n        revenue_projection: {\n            APAC: { quota: 0, achieved: 0, projected_80: 0, projected_all: 0 },\n            EMEA: { quota: 0, achieved: 0, projected_80: 0, projected_all: 0 },\n            Americas: { quota: 0, achieved: 0, projected_80: 0, projected_all: 0 }\n        },\n        potential_closures: {\n            APAC: [],\n            EMEA: [],\n            Americas: []\n        },\n        opportunity_types: {\n            APAC: { POC: { value: 0, count: 0 }, MAP: { value: 0, count: 0 }, GenAI: { value: 0, count: 0 } },\n            EMEA: { POC: { value: 0, count: 0 }, MAP: { value: 0, count: 0 }, GenAI: { value: 0, count: 0 } },\n            Americas: { POC: { value: 0, count: 0 }, MAP: { value: 0, count: 0 }, GenAI: { value: 0, count: 0 } }\n        },\n        stage_movement: {\n            APAC: [],\n            EMEA: [],\n            Americas: []\n        },\n        financial_year: ''\n    });\n    \n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const formatCurrency = (value) => {\n        return new Intl.NumberFormat('en-SG', {\n            style: 'currency',\n            currency: 'SGD',\n            maximumFractionDigits: 0\n        }).format(value);\n    };\n\n    const formatDateRange = (startDate, endDate) => {\n        const start = new Date(startDate);\n        const end = new Date(endDate);\n        return `${start.toLocaleDateString('en-SG')} - ${end.toLocaleDateString('en-SG')}`;\n    };\n\n    // Get financial year quarter dates\n    const getFinancialYearQuarterDates = () => {\n        const now = new Date();\n        const currentMonth = now.getMonth(); // 0-11\n        const currentYear = now.getFullYear();\n        \n        // Determine financial year\n        const financialYearStart = currentMonth < 3 ? currentYear - 1 : currentYear;\n        const financialYearEnd = financialYearStart + 1;\n        \n        // Q1: Apr-Jun, Q2: Jul-Sep, Q3: Oct-Dec, Q4: Jan-Mar\n        return {\n            Q1: {\n                start: new Date(financialYearStart, 3, 1), // April 1\n                end: new Date(financialYearStart, 5, 30)   // June 30\n            },\n            Q2: {\n                start: new Date(financialYearStart, 6, 1), // July 1\n                end: new Date(financialYearStart, 8, 30)   // September 30\n            },\n            Q3: {\n                start: new Date(financialYearStart, 9, 1), // October 1\n                end: new Date(financialYearStart, 11, 31)  // December 31\n            },\n            Q4: {\n                start: new Date(financialYearEnd, 0, 1),   // January 1\n                end: new Date(financialYearEnd, 2, 31)     // March 31\n            }\n        };\n    };\n\n    // Fetch data from Zoho CRM API\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n                const data = await getDashboardData();\n                setDashboardData(data);\n                setError(null);\n            } catch (err) {\n                console.error('Error fetching dashboard data:', err);\n                setError('Failed to load dashboard data. Please try again later.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    if (loading) {\n        return (\n            <div className=\"dashboard loading\">\n                <div className=\"loading-spinner\">Loading dashboard data...</div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"dashboard error\">\n                <div className=\"error-message\">{error}</div>\n            </div>\n        );\n    }\n\n    const quarterDates = getFinancialYearQuarterDates();\n\n    return (\n        <div className=\"dashboard\">\n            <header className=\"header\">\n                <h1>Sales Dashboard</h1>\n                <div className=\"financial-year\">\n                    <h2>Financial Year: {dashboardData.financial_year}</h2>\n                </div>\n                <div className=\"date-ranges\">\n                    <span>Q1: {formatDateRange(quarterDates.Q1.start, quarterDates.Q1.end)}</span>\n                    <span>Q2: {formatDateRange(quarterDates.Q2.start, quarterDates.Q2.end)}</span>\n                    <span>Q3: {formatDateRange(quarterDates.Q3.start, quarterDates.Q3.end)}</span>\n                    <span>Q4: {formatDateRange(quarterDates.Q4.start, quarterDates.Q4.end)}</span>\n                </div>\n            </header>\n\n            <div className=\"dashboard-grid\">\n                <OverviewPanel data={dashboardData} formatCurrency={formatCurrency} />\n                <RegionRevenue data={dashboardData.regional_pipeline} formatCurrency={formatCurrency} />\n                <SalesFunnel data={dashboardData.stage_region_breakdown} formatCurrency={formatCurrency} />\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}