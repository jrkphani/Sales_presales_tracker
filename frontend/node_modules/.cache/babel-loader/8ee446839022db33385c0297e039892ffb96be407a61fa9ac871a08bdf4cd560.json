{"ast":null,"code":"var _jsxFileName = \"/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/charts/BarChart.js\";\nimport React from 'react';\nimport { ResponsiveContainer, BarChart as RechartsBarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n// CustomTooltip component that gets formatCurrency from the parent component's props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: payload.map((entry, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltip-value\",\n        style: {\n          color: entry.color\n        },\n        children: [entry.name, \": \", entry.payload.formatCurrency ? entry.payload.formatCurrency(entry.value) : new Intl.NumberFormat('en-US', {\n          style: 'currency',\n          currency: 'USD',\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 0\n        }).format(entry.value)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst BarChart = ({\n  data,\n  keys,\n  colors,\n  onClick,\n  formatCurrency\n}) => {\n  // Add formatCurrency to each data point\n  const enhancedData = data.map(item => ({\n    ...item,\n    formatCurrency\n  }));\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 350,\n    children: /*#__PURE__*/_jsxDEV(RechartsBarChart, {\n      data: enhancedData,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"quarter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), keys.map((key, index) => /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: key,\n        name: key.split('_')[0],\n        fill: colors[index],\n        radius: [4, 4, 0, 0]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c2 = BarChart;\nexport default BarChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"BarChart\");","map":{"version":3,"names":["React","ResponsiveContainer","BarChart","RechartsBarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","className","children","map","entry","index","style","color","name","formatCurrency","value","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","fileName","_jsxFileName","lineNumber","columnNumber","_c","data","keys","colors","onClick","enhancedData","item","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","content","key","split","fill","radius","_c2","$RefreshReg$"],"sources":["/Users/jrkphani/Projects/Sales_presales_tracker/frontend/src/components/charts/BarChart.js"],"sourcesContent":["import React from 'react';\nimport {\n  ResponsiveContainer,\n  BarChart as RechartsBarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from 'recharts';\n\n// CustomTooltip component that gets formatCurrency from the parent component's props\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\">\n        {payload.map((entry, index) => (\n          <p key={index} className=\"tooltip-value\" style={{ color: entry.color }}>\n            {entry.name}: {entry.payload.formatCurrency ? \n              entry.payload.formatCurrency(entry.value) : \n              new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0,\n              }).format(entry.value)\n            }\n          </p>\n        ))}\n      </div>\n    );\n  }\n  return null;\n};\n\nconst BarChart = ({ data, keys, colors, onClick, formatCurrency }) => {\n  // Add formatCurrency to each data point\n  const enhancedData = data.map(item => ({\n    ...item,\n    formatCurrency\n  }));\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={350}>\n      <RechartsBarChart\n        data={enhancedData}\n        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n        onClick={onClick}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"quarter\" />\n        <YAxis />\n        <Tooltip content={<CustomTooltip />} />\n        <Legend />\n        {keys.map((key, index) => (\n          <Bar\n            key={key}\n            dataKey={key}\n            name={key.split('_')[0]}\n            fill={colors[index]}\n            radius={[4, 4, 0, 0]}\n          />\n        ))}\n      </RechartsBarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default BarChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}